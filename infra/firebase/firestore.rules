rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function hasRole(role) {
      return request.auth.token.role != null && role in request.auth.token.role;
    }

    match /learners/{lid} {
      allow read: if request.auth != null && (request.auth.uid == lid || hasRole('teacher') || hasRole('parent'));
      allow write: if request.auth != null && request.auth.uid == lid;
    }

    match /sessions/{sid} {
      allow read, write: if request.auth != null && request.resource.data.learner_id == request.auth.uid;
    }

    match /items/{itemId} {
      allow read: if request.auth != null && (hasRole('author') || hasRole('teacher'));
      allow write: if request.auth != null && hasRole('author');
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

